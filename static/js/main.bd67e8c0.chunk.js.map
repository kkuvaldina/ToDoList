{"version":3,"sources":["components/ToDoItem.js","components/ToDoForm.js","components/App.js","index.js"],"names":["ToDoItem","getBadgeClasses","_this","props","task","taskCompleted","getTextStyle","textDecorationLine","textDecorationStyle","fontSize","_this2","this","react_default","a","createElement","className","onClick","onComplete","id","concat","style","text","e","stopPropagation","onDelete","React","Component","ToDoForm","state","onFormSubmit","event","preventDefault","setState","onInputChange","target","value","onSubmit","type","placeholder","onChange","App","tasks","handleSubmit","newTask","uuid","v4","Object","toConsumableArray","sort","b","localStorage","setItem","JSON","stringify","handleDelete","filter","handleComplete","map","storedTasks","parse","getItem","console","log","components_ToDoForm","components_ToDoItem","key","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.bd67e8c0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass ToDoItem extends React.Component {\r\n  getBadgeClasses = () => this.props.task.taskCompleted ? \"check\" : \"\";\r\n\r\n  getTextStyle = () => {\r\n    let style = {\r\n      textDecorationLine: \"line-through\",\r\n      textDecorationStyle: \"solid\",\r\n      fontSize: \"1.7rem\"\r\n    };\r\n    if (this.props.task.taskCompleted === true) {\r\n      return style;\r\n    }\r\n    return { fontSize: \"1.7rem\" };\r\n  }\r\n\r\n  render() {\r\n    const task = this.props.task;\r\n    return (\r\n      <div\r\n        className=\"ui raised left aligned clearing segment\"\r\n        onClick={() => this.props.onComplete(task.id)}\r\n      >\r\n        <i\r\n          className={`big circle outline icon ${this.getBadgeClasses()}`}\r\n        />\r\n        <span style={this.getTextStyle()}>\r\n          {task.text}\r\n        </span>\r\n        <button\r\n          className=\"ui right floated button\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            this.props.onDelete(task.id)\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React from \"react\";\r\n\r\nclass ToDoForm extends React.Component {\r\n  state = { task: \"\" };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onFormSubmit(this.state.task);\r\n    this.setState({ task: \"\" });\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({ task: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>To Do List</h1>\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form \">\r\n          <div className=\"ui fluid input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Task\"\r\n              value={this.state.task}\r\n              onChange={this.onInputChange}\r\n            />\r\n            <button className=\"ui right floated primary button m-2\">Add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoForm;\r\n","import React from \"react\";\r\nimport ToDoItem from \"./ToDoItem\";\r\nimport ToDoForm from \"./ToDoForm\";\r\nimport uuid from \"uuid\";\r\n\r\nclass App extends React.Component {\r\n  state = { tasks: [] };\r\n\r\n  handleSubmit = newTask => {\r\n    const tasks = [\r\n      { text: newTask, id: `${uuid.v4()}`, taskCompleted: false },\r\n      ...this.state.tasks\r\n    ];\r\n    tasks.sort((a, b) => a.taskCompleted - b.taskCompleted);\r\n    this.setState({ tasks });\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  };\r\n\r\n  componentDidMount() {\r\n    var storedTasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    if (storedTasks) {\r\n      this.setState({ tasks: storedTasks });\r\n    }\r\n  }\r\n\r\n  handleDelete = id => {\r\n    const tasks = this.state.tasks.filter(task => task.id !== id);\r\n    tasks.sort((a, b) => a.taskCompleted - b.taskCompleted);\r\n    this.setState({ tasks });\r\n\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  };\r\n\r\n  handleComplete = id => {\r\n    const tasks = this.state.tasks.map(task => {\r\n      if (task.id === id) {\r\n        task.taskCompleted = !task.taskCompleted;\r\n        return task;\r\n      }\r\n      return task;\r\n    });\r\n\r\n    tasks.sort((a, b) => a.taskCompleted - b.taskCompleted);\r\n    this.setState({ tasks });\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.tasks);\r\n    return (\r\n      <div className=\"ui center aligned container\">\r\n        <ToDoForm onFormSubmit={this.handleSubmit} />\r\n        {this.state.tasks.map(task => (\r\n          <ToDoItem\r\n            task={task}\r\n            key={task.id}\r\n            onDelete={this.handleDelete}\r\n            onComplete={this.handleComplete}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}